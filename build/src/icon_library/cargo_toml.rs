use anyhow::Result;
use std::path::PathBuf;
use tokio::io::AsyncWriteExt;
use tracing::{error, instrument, trace};

use crate::icon::SvgIcon;

#[derive(Debug)]
pub(crate) struct CargoToml {
    /// Path to the libraries Cargo.toml file.
    pub path: PathBuf,
}

impl CargoToml {
    #[instrument(level = "info")]
    async fn create_file(&mut self) -> Result<tokio::fs::File> {
        trace!("Creating file.");
        tokio::fs::OpenOptions::new()
            .create_new(true)
            .write(true)
            .open(&self.path)
            .await
            .map_err(|err| {
                error!(?err, "Could not create file.");
                err
            })
            .map_err(Into::into)
    }

    #[instrument(level = "info")]
    pub(crate) async fn reset(&mut self, lib_name: &str, package_name: &str) -> Result<()> {
        if self.path.exists() {
            trace!("Removing file.");
            tokio::fs::remove_file(&self.path).await?;
        }

        trace!("Writing BASE_CARGO_TOML content.");
        self.create_file()
            .await?
            .write_all(
                indoc::formatdoc!(
                    r#"
                    # ------------------------------------------------------------------------------------------
                    # THIS FILE WAS GENERATED BY THE "BUILD" CRATE.
                    # ------------------------------------------------------------------------------------------

                    [package]
                    name = "{package_name}"
                    version = "0.0.1"
                    authors = ["Charles Edward Gagnon"]
                    edition = "2021"
                    description = "Library providing SVG and corresponding metadata for \"{original_icon_package_name}\""
                    readme = "./README.md"
                    repository = "https://github.com/Carlosted/leptos-icons"
                    license = "MIT"
                    keywords = ["leptos", "icons"]
                    categories = ["web-programming"]

                    [dependencies]
                    leptos-icons-core = {{ path = "../leptos-icons-core" }}
                    serde = {{ version = "1", features = ["derive"], optional = true }}

                    [features]
                    serde = ["dep:serde"]

                "#,
                package_name = lib_name,
                original_icon_package_name = package_name,
                ).as_bytes(),
            )
            .await
            .map_err(Into::into)
    }

    #[instrument(level = "info", skip_all)]
    async fn append(&mut self) -> Result<tokio::io::BufWriter<tokio::fs::File>> {
        trace!("Creating file.");
        Ok(tokio::io::BufWriter::new(
            tokio::fs::OpenOptions::new()
                .append(true)
                .open(&self.path)
                .await
                .map_err(|err| {
                    error!(?err, "Could not open file to append data.");
                    err
                })?,
        ))
    }

    #[instrument(level = "info", skip(icons))]
    pub(crate) async fn append_features(&mut self, icons: &[SvgIcon]) -> Result<()> {
        trace!(
            num_features = icons.len(),
            "Writing features to Cargo.toml."
        );
        let mut cargo_file = self.append().await?;
        for icon in icons.iter() {
            cargo_file
                .write_all(format!("{} = []\n", &icon.feature.name).as_bytes())
                .await?;
        }
        cargo_file.flush().await.map_err(|err| {
            error!(?err, "Could not flush Cargo.toml file after writing.");
            err
        })?;

        Ok(())
    }
}
